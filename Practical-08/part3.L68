00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 26/01/2022 16:18:50

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Part 3 - Practical 8
00000000                             3  * Written by : Huu Chi Huynh
00000000                             4  * Date       : 26/01/2022
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program  
00001000                             9  
00001000  223C 00FFFF00             10      MOVE.L #$00FFFF00, D1    
00001006  103C 0015                 11      MOVE.B #21, D0
0000100A  4E4F                      12      TRAP #15 * Change font colour to green
0000100C                            13      
0000100C                            14      *Output
0000100C  43F9 000010AB             15      LEA ask_name, A1
00001012  103C 000D                 16      MOVE.B #13, D0
00001016  4E4F                      17      TRAP #15
00001018                            18          
00001018                            19      * 11 Get mouse position
00001018  103C 000B                 20      MOVE.B #11, D0
0000101C  4E4F                      21      TRAP #15
0000101E                            22      
0000101E                            23      *INPUT name #2
0000101E  103C 0002                 24      MOVE.B #2, D0
00001022  4E4F                      25      TRAP #15
00001024                            26       
00001024                            27      *Output Name
00001024  103C 000D                 28      MOVE.B #13, D0
00001028  4E4F                      29      TRAP #15
0000102A                            30      
0000102A                            31      *Output
0000102A  43F9 000010C4             32      LEA confirm1, A1
00001030  103C 000E                 33      MOVE.B #14, D0
00001034  4E4F                      34      TRAP #15
00001036                            35  
00001036                            36  
00001036                            37  Y_OR_N:
00001036                            38      * 5: Read single character from the keyboard into D1.B.
00001036  103C 0005                 39      MOVE.B #5, D0
0000103A  4E4F                      40      TRAP #15
0000103C                            41          
0000103C  43F9 000010E6             42      LEA YES, A1    
00001042  1411                      43      MOVE.B (A1), D2
00001044  B441                      44      CMP D1, D2
00001046  6700 0034                 45      BEQ NEXT *Continue
0000104A                            46          
0000104A  43F9 000010E8             47      LEA NO, A1
00001050  1411                      48      MOVE.B (A1), D2
00001052  B441                      49      CMP D1, D2
00001054  67AA                      50      BEQ START *Ask for name again
00001056                            51       
00001056  2239 004CBDFF             52      MOVE.L $004CBDFF, D1
0000105C  103C 0015                 53      MOVE.B #21, D0
00001060  4E4F                      54      TRAP #15 * Change font colour to orange
00001062                            55      
00001062                            56      *Output
00001062  43F9 0000108C             57      LEA invalid_response, A1
00001068  103C 000D                 58      MOVE.B #13, D0
0000106C  4E4F                      59      TRAP #15
0000106E                            60          
0000106E  2239 0000FF00             61      MOVE.L $0000FF00, D1
00001074  103C 0015                 62      MOVE.B #21, D0
00001078  4E4F                      63      TRAP #15 * Change font colour to green
0000107A                            64      
0000107A                            65      *Loop and ask question again    
0000107A                            66      
0000107A  60BA                      67      BRA Y_OR_N
0000107C                            68  NEXT:    
0000107C  43F9 000010EA             69      LEA ask_age, A1
00001082                            70      
00001082  103C 0012                 71      MOVE.B #18, D0
00001086  4E4F                      72      TRAP #15
00001088                            73  
00001088                            74  * Put program code here
00001088                            75      *2  Read string from keyboard and store at (A1), NULL terminated, length retuned in D1.W (max 80) DONE 
00001088                            76      *5 Read single character from the keyboard into D1.B. DONE
00001088                            77      *8  Return time in hundredths of a second since m
00001088                            78  
00001088                            79      *11
00001088                            80      *Position the cursor at ROW, COL.
00001088                            81  
00001088                            82      *The high byte of D1.W holds the COL number (0-79),  
00001088                            83  
00001088                            84      *The low byte holds the ROW number (0-31).
00001088                            85  
00001088                            86      *0,0 is top left 79,31 is the bottom right. 
00001088                            87  
00001088                            88      *Out of range coordinates are ignored. 
00001088                            89  
00001088                            90   *Clear Screen : Set D1.W to $FF00.
00001088                            91      *13 Display the NULL terminated string at (A1) with CR, LF. DONE
00001088                            92      *17 Combination of Trap codes 14 & 3.
00001088                            93  
00001088                            94   *Display the NULL terminated string at (A1) without CR, LF then
00001088                            95  
00001088                            96   *Display the decimal number in D1.L.
00001088                            97      *18 Combination of Trap codes 14 & 4. DONE
00001088                            98   *Display the NULL terminated string at (A1) without CR, LF then
00001088                            99   *Read a number from the keyboard into D1.L.
00001088                           100      
00001088                           101  *21 Set Font Color
00001088                           102    *D1.L = color as $00BBGGRR
00001088                           103    *           BB is amount of blue from $00 to $FF
00001088                           104    *           GG is amount of green from $00 to $FF
00001088                           105    *           RR is amount of red from $00 to $FF
00001088                           106    *D2.B = style by bits,  0 = off, 1 = on
00001088                           107    *           bit0 is Bold
00001088                           108    *           bit1 is Italic
00001088                           109    *           bit2 is Underline
00001088                           110    *           bit3 is StrikeOut 
00001088                           111  
00001088  FFFF FFFF                112      SIMHALT             ; halt simulator
0000108C                           113      
0000108C= 50 6C 65 61 73 65 ...    114  invalid_response dc.b 'Please enter a valid response.',0
000010AB= 50 6C 65 61 73 65 ...    115  ask_name dc.b 'Please enter your name: ',0
000010C4= 49 73 20 74 68 61 ...    116  confirm1 dc.b 'Is that your name? Y or N ',0
000010DF= 59 20 6F 72 20 4E 00     117  confirm2 dc.b 'Y or N',0
000010E6= 59 00                    118  YES dc.b 89,0
000010E8= 4E 00                    119  NO dc.b 78,0
000010EA= 50 6C 65 61 73 65 ...    120  ask_age dc.b 'Please enter your age: ',0
00001102= 0000                     121  name_length dc.w 0
00001104= 00                       122  name dc.b '',0
00001105                           123  
00001105                           124      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ASK_AGE             10EA
ASK_NAME            10AB
CONFIRM1            10C4
CONFIRM2            10DF
INVALID_RESPONSE    108C
NAME                1104
NAME_LENGTH         1102
NEXT                107C
NO                  10E8
START               1000
YES                 10E6
Y_OR_N              1036
